{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\todo list\\\\client\\\\src\\\\LastThreeNotes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './LastThreeNotes.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourMainComponent = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const openModal = todo => {\n    setSelectedTodo(todo);\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedTodo(null);\n  };\n};\n_s(YourMainComponent, \"2rOv/hvM8oQjS7kGtSgeStt25JY=\");\n_c = YourMainComponent;\nconst TilesContainer = () => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/three');\n        const todosData = await response.json();\n        const formattedTodos = todosData.map(todo => ({\n          ...todo,\n          createdAt: new Date(todo.createdAt),\n          updatedAt: new Date(todo.updatedAt)\n        }));\n        const recentThreeTodos = formattedTodos.slice(0, 3);\n        console.log(recentThreeTodos);\n        setTodos(recentThreeTodos);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tile\",\n      onClick: () => openModal(todo),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"title\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"content\",\n        children: todo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"updt\",\n        children: [\"Last Updated At: \", new Date(todo.updatedAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)), /*#__PURE__*/_jsxDEV(EditModal, {\n      isOpen: modalOpen,\n      onClose: closeModal,\n      todo: selectedTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n};\n_s2(TilesContainer, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c2 = TilesContainer;\nexport default TilesContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"YourMainComponent\");\n$RefreshReg$(_c2, \"TilesContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YourMainComponent","_s","modalOpen","setModalOpen","selectedTodo","setSelectedTodo","openModal","todo","closeModal","_c","TilesContainer","_s2","todos","setTodos","fetchTodos","response","fetch","todosData","json","formattedTodos","map","createdAt","Date","updatedAt","recentThreeTodos","slice","console","log","error","class","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","content","toLocaleString","_id","EditModal","isOpen","onClose","_c2","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/todo list/client/src/LastThreeNotes.js"],"sourcesContent":["import './LastThreeNotes.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst YourMainComponent = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n\r\n  const openModal = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setSelectedTodo(null);\r\n  }};\r\n\r\nconst TilesContainer = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const fetchTodos = async () => {\r\n          try {\r\n              const response = await fetch('http://localhost:3002/three');\r\n              const todosData = await response.json();\r\n\r\n              const formattedTodos = todosData.map(todo => ({\r\n                  ...todo,\r\n                  createdAt: new Date(todo.createdAt),\r\n                  updatedAt: new Date(todo.updatedAt),\r\n              }));\r\n\r\n              const recentThreeTodos = formattedTodos.slice(0, 3);\r\n              console.log(recentThreeTodos);\r\n              setTodos(recentThreeTodos);\r\n          } catch (error) {\r\n              console.error(error);\r\n          }\r\n      };\r\n      fetchTodos();\r\n  }, []);\r\n  return (\r\n          <div class=\"container\">\r\n              {todos.map(todo => (\r\n                  <div key={todo._id} class=\"tile\" onClick={() => openModal(todo)}>\r\n                      <h2 class=\"title\">{todo.title}</h2>\r\n                      <p class=\"content\">{todo.content}</p>\r\n                      <p class=\"updt\">Last Updated At: {new Date(todo.updatedAt).toLocaleString()}</p>\r\n                  </div>\r\n              ))}\r\n              <EditModal isOpen={modalOpen} onClose={closeModal} todo={selectedTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TilesContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}