{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\todo list\\\\client\\\\src\\\\NoteDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport './NoteDetailsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteDetailPage = () => {\n  _s();\n  const {\n    noteId\n  } = useParams();\n  const [noteDetails, setNoteDetails] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [editedContent, setEditedContent] = useState('');\n  useEffect(() => {\n    const fetchNoteDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:3002/api/notes/${noteId}`);\n        const data = await response.json();\n        setNoteDetails(data);\n        setEditedTitle(data.title);\n        setEditedContent(data.content);\n      } catch (error) {\n        console.error('Error fetching note details', error);\n      }\n    };\n    fetchNoteDetails();\n  }, [noteId]);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/update/${noteId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: editedTitle,\n          content: editedContent\n        })\n      });\n      if (response.ok) {\n        setIsEditing(false);\n        const updatedNoteDetails = await response.json();\n        setNoteDetails(updatedNoteDetails);\n      } else {\n        console.error('Failed to update note details');\n      }\n    } catch (error) {\n      console.error('Error updating note details', error);\n    }\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:3002/delete/${noteId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.error('Error deleting note', error);\n    }\n  };\n  const handleCancel = () => {\n    setEditedTitle(noteDetails.title);\n    setEditedContent(noteDetails.content);\n    setIsEditing(false);\n  };\n  const navigate = useNavigate();\n\n  // Check if the current route is '/note/:noteId'\n  const isNoteDetailPage = navigate().location.pathname.startsWith('/note/');\n  if (!isNoteDetailPage) {\n    // Render the header only if it's not the detail page route\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nts\",\n        children: \"Notes App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Note Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), noteDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedTitle,\n          onChange: e => setEditedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedContent,\n          onChange: e => setEditedContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/note_list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"a\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", noteDetails.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Content: \", noteDetails.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Updated At: \", new Date(noteDetails.updatedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/note_list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/note_list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteDetailPage, \"+/NXbWiespqfcU2TtT+flu4VIow=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NoteDetailPage;\nexport default NoteDetailPage;\nvar _c;\n$RefreshReg$(_c, \"NoteDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","jsxDEV","_jsxDEV","NoteDetailPage","_s","noteId","noteDetails","setNoteDetails","isEditing","setIsEditing","editedTitle","setEditedTitle","editedContent","setEditedContent","fetchNoteDetails","response","fetch","data","json","title","content","error","console","handleEdit","handleSave","method","headers","body","JSON","stringify","ok","updatedNoteDetails","handleDelete","handleCancel","navigate","isNoteDetailPage","location","pathname","startsWith","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","to","onClick","class","Date","updatedAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/todo list/client/src/NoteDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport './NoteDetailsPage.css'\r\n\r\nconst NoteDetailPage = () => {\r\n  const { noteId } = useParams();\r\n\r\n  const [noteDetails, setNoteDetails] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [editedContent, setEditedContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchNoteDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3002/api/notes/${noteId}`);\r\n        const data = await response.json();\r\n        setNoteDetails(data);\r\n        setEditedTitle(data.title);\r\n        setEditedContent(data.content);\r\n      } catch (error) {\r\n        console.error('Error fetching note details', error);\r\n      }\r\n    };\r\n\r\n    fetchNoteDetails();\r\n  }, [noteId]);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/update/${noteId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          title: editedTitle,\r\n          content: editedContent,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsEditing(false);\r\n        const updatedNoteDetails = await response.json();\r\n        setNoteDetails(updatedNoteDetails);\r\n      } else {\r\n        console.error('Failed to update note details');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating note details', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3002/delete/${noteId}`, {\r\n        method: 'DELETE',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error deleting note', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedTitle(noteDetails.title);\r\n    setEditedContent(noteDetails.content);\r\n    setIsEditing(false);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the current route is '/note/:noteId'\r\n  const isNoteDetailPage = navigate().location.pathname.startsWith('/note/');\r\n\r\n  if (!isNoteDetailPage) {\r\n    // Render the header only if it's not the detail page route\r\n    return (\r\n      <header>\r\n        <p className=\"nts\">Notes App</p>\r\n      </header>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Note Detail Page</h2>\r\n      {noteDetails && (\r\n        <div>\r\n          {isEditing && (\r\n            <div>\r\n              <label>Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={editedTitle}\r\n                onChange={(e) => setEditedTitle(e.target.value)}\r\n              />\r\n              <label>Content:</label>\r\n              <textarea\r\n                value={editedContent}\r\n                onChange={(e) => setEditedContent(e.target.value)}\r\n              />\r\n              <Link to=\"/note_list\"><button onClick={handleSave}>Save</button></Link>\r\n              <button onClick={handleCancel}>Cancel</button>\r\n            </div>\r\n          )}\r\n          {!isEditing && (\r\n            <div class=\"a\">\r\n              <p>Title: {noteDetails.title}</p>\r\n              <p>Content: {noteDetails.content}</p>\r\n              <p>Last Updated At: {new Date(noteDetails.updatedAt).toLocaleString()}</p>\r\n              <button onClick={handleEdit}>Edit</button>\r\n              <Link to=\"/note_list\"><button onClick={handleDelete}>Delete</button></Link>\r\n              <Link to=\"/note_list\"><button>Go Back</button></Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default NoteDetailPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}