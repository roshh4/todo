{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\todo list\\\\client\\\\src\\\\LastThreeNotes.js\",\n  _s = $RefreshSig$();\nimport './LastThreeNotes.css';\nimport React, { useState, useEffect } from 'react';\nimport EditModel from './EditModel'; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TilesContainer = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [modelOpen, setModelOpen] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/three');\n        const todosData = await response.json();\n        const formattedTodos = todosData.map(todo => ({\n          ...todo,\n          createdAt: new Date(todo.createdAt),\n          updatedAt: new Date(todo.updatedAt)\n        }));\n        const recentThreeTodos = formattedTodos.slice(0, 3);\n        setTodos(recentThreeTodos);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  const openModel = todo => {\n    setSelectedTodo(todo);\n    setModelOpen(true);\n  };\n  const closeModel = () => {\n    setModelOpen(false);\n    setSelectedTodo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      onClick: () => openModel(todo),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"content\",\n        children: todo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"updt\",\n        children: [\"Last Updated At: \", new Date(todo.updatedAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(EditModel, {\n      isOpen: modelOpen,\n      onClose: closeModel,\n      todo: selectedTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TilesContainer, \"1sW/hbo7V8X9hP/2HcQ68G1Hkzc=\");\n_c = TilesContainer;\nexport default TilesContainer;\nvar _c;\n$RefreshReg$(_c, \"TilesContainer\");","map":{"version":3,"names":["React","useState","useEffect","EditModel","jsxDEV","_jsxDEV","TilesContainer","_s","todos","setTodos","modelOpen","setModelOpen","selectedTodo","setSelectedTodo","fetchTodos","response","fetch","todosData","json","formattedTodos","map","todo","createdAt","Date","updatedAt","recentThreeTodos","slice","error","console","openModel","closeModel","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","content","toLocaleString","_id","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/todo list/client/src/LastThreeNotes.js"],"sourcesContent":["import './LastThreeNotes.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport EditModel from './EditModel'; // Adjust the path accordingly\r\n\r\nconst TilesContainer = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3002/three');\r\n        const todosData = await response.json();\r\n\r\n        const formattedTodos = todosData.map(todo => ({\r\n          ...todo,\r\n          createdAt: new Date(todo.createdAt),\r\n          updatedAt: new Date(todo.updatedAt),\r\n        }));\r\n\r\n        const recentThreeTodos = formattedTodos.slice(0, 3);\r\n        setTodos(recentThreeTodos);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const openModel = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setModelOpen(true);\r\n  };\r\n\r\n  const closeModel = () => {\r\n    setModelOpen(false);\r\n    setSelectedTodo(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {todos.map(todo => (\r\n        <div key={todo._id} className=\"tile\" onClick={() => openModel(todo)}>\r\n          <h2 className=\"title\">{todo.title}</h2>\r\n          <p className=\"content\">{todo.content}</p>\r\n          <p className=\"updt\">Last Updated At: {new Date(todo.updatedAt).toLocaleString()}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <EditModel isOpen={modelOpen} onClose={closeModel} todo={selectedTodo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TilesContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}