{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\todo list\\\\client\\\\src\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport fetchTilesData from './LastThreeNotes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteForm = ({\n  fetchTilesData\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [addSuccess, setAddSuccess] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('hi');\n      setTitle('');\n      console.log(\"ooo\");\n      setContent('');\n      const response = await fetch('http://localhost:3002/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      console.log(\"ajshfa\");\n      window.location.reload();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setAddSuccess(True);\n  };\n  const responseOkay = () => {\n    setAddSuccess(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"hi\", {\n      className: \"add\",\n      children: \"Add New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), addSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adds\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Note Added Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: responseOkay,\n        children: \"Okay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteForm, \"sEjfnzBRfZ2MsnzGkIqah0qSclM=\");\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","useState","Link","fetchTilesData","jsxDEV","_jsxDEV","NoteForm","_s","title","setTitle","content","setContent","addSuccess","setAddSuccess","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","window","location","reload","error","True","responseOkay","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/todo list/client/src/NoteForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport fetchTilesData from './LastThreeNotes.js'\r\n\r\nconst NoteForm = ({ fetchTilesData }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [addSuccess, setAddSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      console.log('hi');\r\n        setTitle('');\r\n        console.log(\"ooo\");\r\n        setContent('');\r\n      const response = await fetch('http://localhost:3002/api/notes', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ title, content }),\r\n      });\r\n      console.log(\"ajshfa\");\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n    setAddSuccess(True);\r\n  };\r\n  const responseOkay = () => {\r\n    setAddSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <hi className='add'>Add New Note</hi>\r\n      <label>\r\n        Title:\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Content:\r\n        <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n      </label>\r\n      <button type=\"submit\">Save</button>\r\n      {addSuccess && (<div className = \"adds\">\r\n        <p>Note Added Successfully</p>\r\n        <button onClick={responseOkay}>Okay!</button>\r\n      </div>)}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}