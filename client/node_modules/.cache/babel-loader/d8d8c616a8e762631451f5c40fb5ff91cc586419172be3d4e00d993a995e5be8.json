{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Desktop\\\\college\\\\internship\\\\webdev\\\\todo list\\\\client\\\\src\\\\NoteList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './NoteList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('hi');\nconst NoteList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  console.log('hi');\n  useEffect(async () => {\n    const response = await fetch('http://localhost:3001/all');\n    /* const fetchTodos = async () => {\r\n         try {\r\n             const response = await fetch('http://localhost:3001/all');\r\n             const todosData = await response.json();\r\n               console.log('Fetched data:', todosData);\r\n               const formattedTodos = todosData.map(todo => ({\r\n                 ...todo,\r\n                 createdAt: new Date(todo.createdAt),\r\n                 updatedAt: new Date(todo.updatedAt),\r\n             }));\r\n               console.log('Formatted todos:', formattedTodos);\r\n               setTodos(formattedTodos);\r\n         } catch (error) {\r\n             console.error(error);\r\n         }\r\n     };\r\n     fetchTodos();*/\n  }, []);\n  console.log('ji');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todos-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Updated At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Created At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"todo-tile\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated At: \", new Date(todo.updatedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", new Date(todo.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","console","log","NoteList","_s","todos","setTodos","response","fetch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","todo","class","title","content","Date","updatedAt","toLocaleString","createdAt","_id","_c","$RefreshReg$"],"sources":["C:/Users/roshi/Desktop/college/internship/webdev/todo list/client/src/NoteList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './NoteList.css';\r\nconsole.log('hi');\r\nconst NoteList = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    console.log('hi');\r\n\r\n    useEffect( async() => {\r\n        const response = await fetch('http://localhost:3001/all');\r\n       /* const fetchTodos = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/all');\r\n                const todosData = await response.json();\r\n\r\n                console.log('Fetched data:', todosData);\r\n\r\n                const formattedTodos = todosData.map(todo => ({\r\n                    ...todo,\r\n                    createdAt: new Date(todo.createdAt),\r\n                    updatedAt: new Date(todo.updatedAt),\r\n                }));\r\n\r\n                console.log('Formatted todos:', formattedTodos);\r\n\r\n                setTodos(formattedTodos);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchTodos();*/\r\n    }, []);\r\n    console.log('ji');\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Todo List</h1>\r\n            <div id=\"todos-container\">\r\n            <h2>title</h2>\r\n                        <p>content</p>\r\n                        <p>Updated At</p>\r\n                        <p>Created At</p>\r\n                {todos.map(todo => (\r\n                    <div key={todo._id} class=\"todo-tile\">\r\n                        <h2>{todo.title}</h2>\r\n                        <p>{todo.content}</p>\r\n                        <p>Updated At: {new Date(todo.updatedAt).toLocaleString()}</p>\r\n                        <p>Created At: {new Date(todo.createdAt).toLocaleString()}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;AACjB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtCI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAEjBJ,SAAS,CAAE,YAAW;IAClB,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;IAC1D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKI,CAAC,EAAE,EAAE,CAAC;EACNP,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjB,oBACIF,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MAAKe,EAAE,EAAC,iBAAiB;MAAAL,QAAA,gBACzBV,OAAA;QAAAU,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACFd,OAAA;QAAAU,QAAA,EAAG;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACdd,OAAA;QAAAU,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjBd,OAAA;QAAAU,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACxBT,KAAK,CAACW,GAAG,CAACC,IAAI,iBACXjB,OAAA;QAAoBkB,KAAK,EAAC,WAAW;QAAAR,QAAA,gBACjCV,OAAA;UAAAU,QAAA,EAAKO,IAAI,CAACE;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBd,OAAA;UAAAU,QAAA,EAAIO,IAAI,CAACG;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBd,OAAA;UAAAU,QAAA,GAAG,cAAY,EAAC,IAAIW,IAAI,CAACJ,IAAI,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9Dd,OAAA;UAAAU,QAAA,GAAG,cAAY,EAAC,IAAIW,IAAI,CAACJ,IAAI,CAACO,SAAS,CAAC,CAACD,cAAc,CAAC,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJxDG,IAAI,CAACQ,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACV,EAAA,CAhDID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}